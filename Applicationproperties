spring.application.name=yob-thirdparty-api-service
server.port=9095

Server.servlet.context-path = /yob-thirdparty-api
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://host.docker.internal:3306/yob_third_party_db
spring.datasource.username=root
spring.datasource.password=Kirti@1304
spring.jpa.hibernate.ddl-auto=none
spring.liquibase.enabled=true
spring.liquibase.change-log=classpath:db/changelog/changelog.xml








#version: '3'
#
#services:
#  jaeger:
#    image: jaegertracing/all-in-one:1.45
#    container_name: jaeger
#    environment:
#      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
#    ports:
#      - "5775:5775"   # UDP port for agent communication (bind to host's port 5775)
#      - "6831:6831"   # UDP port for agent communication
#      - "6832:6832"   # UDP port for agent communication
#      - "5778:5778"   # HTTP port for health checks
#      - "14250:14250" # gRPC port for OpenTelemetry
#      - "14268:14268" # HTTP port for Jaeger collector API
#      - "16686:16686" # Jaeger UI (web interface)
#      - "14201:14201" # Jaeger query service (gRPC)
#    networks:
#      - jaeger-net
#
#  jaeger-agent:
#    image: jaegertracing/jaeger-agent:1.45
#    container_name: jaeger-agent
#    environment:
#      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
#    ports:
#      - "5776:5775"   # Change host port to 5776 (avoiding conflict)
#    command:
#      - --reporter.grpc.host-port=jaeger:14250
#    networks:
#      - jaeger-net
#
#networks:
#  jaeger-net:
#    driver: bridge


#---------------------------------------------------------

version: '3'

services:
  jaeger:
    image: jaegertracing/all-in-one:1.45
    container_name: jaeger
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
      - JAEGER_PORTS_UDP=5775,6831,6832
      - JAEGER_HTTP_PORT=5778
      - JAEGER_GRPC_PORT=4317
      - JAVA_TOOL_OPTIONS=-javaagent:/app/opentelemetry-javaagent.jar
      - OTEL_SERVICE_NAME=yob-thirdparty-api
      - OTEL_METRICS_EXPORTER=none
      - OTEL_TRACES_EXPORTER=jaeger
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:14250

    ports:
      - "5775:5775"   # UDP port for agent communication
      - "6831:6831"   # UDP port for agent communication
      - "6832:6832"   # UDP port for agent communication
      - "5778:5778"   # HTTP port for health checks
      - "14250:14250" # gRPC port for OpenTelemetry (OTLP)
      - "14268:14268" # HTTP port for Jaeger collector API
      - "16686:16686" # Jaeger UI (web interface)
      - "14201:14201" # Jaeger query service (gRPC)
    networks:
      - jaeger-net

  my-java-app:
    build:
      context: .
      dockerfile: Dockerfile  # This will use the Dockerfile you provided
    container_name: my-java-app
    environment:
      - JAVA_TOOL_OPTIONS="-javaagent:/app/opentelemetry-javaagent.jar"
      - OTEL_SERVICE_NAME=my-java-app
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:14250 # Using Jaeger service name for internal Docker communication
      - SPRING_DATASOURCE_URL=jdbc:mysql://host.docker.internal:3306/yob_third_party_db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=Kirti@1304
    ports:
      - "9095:9095" # Adjust depending on your app's port
    depends_on:
      - jaeger
    networks:
      - jaeger-net

networks:
  jaeger-net:
    driver: bridge

